# Generated by Django 4.2.3 on 2023-07-06 16:31

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messages', models.TextField(blank=True, null=True)),
                ('tasks', models.CharField(max_length=50)),
                ('timeline', models.CharField(max_length=50)),
                ('owner', models.CharField(max_length=50)),
                ('phase', models.CharField(max_length=50)),
                ('action', models.CharField(max_length=50)),
                ('active_team', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('superadmin', 'Super Admin'), ('staff', 'Staff'), ('agent', 'Agent'), ('student', 'Student')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('family_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('onshore', models.BooleanField()),
                ('preferred_language', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_number', models.IntegerField()),
                ('country_of_residence', models.CharField(blank=True, max_length=50, null=True)),
                ('highest_education', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateField(blank=True, null=True)),
                ('how_did_you_hear', models.CharField(choices=[('social/facebook', 'Social Media (Facebook)'), ('social/instagram', 'Social Media (Instagram)'), ('social/tiktok', 'Social Media (TikTok)'), ('eDm', 'Email Marketing (EDM)'), ('expo', 'Expo or Event'), ('referral', 'Referral'), ('websearch', 'Web Search'), ('advertising/print', 'Advertising (Print)'), ('advertising/tv', 'Advertising (TV)'), ('advertising/cinema', 'Advertising (Cinema)'), ('advertising/radio', 'Advertising (Radio)'), ('advertising/outdoor', 'Advertising (Outdoor)'), ('advertising/online', 'Advertising (Online)'), ('school', 'School'), ('other', 'Other')], max_length=100)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('ApplicationStage', models.CharField(choices=[('submitted', 'Submitted to Adventus'), ('lodged', 'Lodged with Institutions'), ('offers_received', 'Offers Received'), ('visas_granted', 'Visas Granted'), ('students_commenced', 'Students Commenced'), ('students_deferred', 'Students Deferred')], default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_no', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('concentration', models.CharField(blank=True, max_length=100, null=True)),
                ('website_url', models.URLField()),
                ('campus', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('study_level', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('intakes', models.CharField(blank=True, max_length=100, null=True)),
                ('entry_requirements', models.TextField(blank=True, null=True)),
                ('ielts_score', models.FloatField(blank=True, null=True)),
                ('ielts_no_band_less_than', models.FloatField(blank=True, null=True)),
                ('toefl_score', models.IntegerField(blank=True, null=True)),
                ('toefl_no_band_less_than', models.IntegerField(blank=True, null=True)),
                ('pte_score', models.IntegerField(blank=True, null=True)),
                ('pte_no_band_less_than', models.CharField(max_length=10)),
                ('application_deadline', models.DateField(null=True)),
                ('application_fee', models.CharField(blank=True, max_length=100, null=True)),
                ('yearly_tuition_fees', models.FloatField(blank=True, null=True)),
                ('scholarship_available', models.BooleanField(default=False)),
                ('scholarship_detail', models.TextField(blank=True, null=True)),
                ('backlog_range', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('esl_elp_detail', models.TextField(blank=True, null=True)),
                ('application_mode', models.CharField(max_length=100, null=True)),
                ('application', models.CharField(max_length=100, null=True)),
                ('det_score', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudyPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intended_area_of_study', models.CharField(max_length=100)),
                ('intended_course_level', models.CharField(max_length=50)),
                ('courses_and_fields_comments', models.TextField()),
                ('career_paths', models.TextField()),
                ('intended_institutions', models.TextField()),
                ('intended_intake_quarter', models.CharField(max_length=50)),
                ('intended_intake_year', models.IntegerField()),
                ('intended_intake_comments', models.TextField()),
                ('funding_source', models.CharField(max_length=100)),
                ('intended_destination_1', models.CharField(max_length=100)),
                ('intended_destination_2', models.CharField(max_length=100)),
                ('intended_destination_3', models.CharField(max_length=100)),
                ('intended_destination_comments', models.TextField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.IntegerField()),
                ('application_status', models.CharField(max_length=50)),
                ('save_date', models.DateField()),
                ('shortlisted_date', models.DateTimeField()),
                ('first_submitted', models.DateField()),
                ('declaration', models.BooleanField(default=False)),
                ('medical_condition', models.BooleanField(default=False)),
                ('student', models.ManyToManyField(to='student.student')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='University',
            field=models.ManyToManyField(related_name='students', to='student.university'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to='student.customuser'),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.agent')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to='student.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_1', models.CharField(max_length=100)),
                ('address_2', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state_province', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postcode_zipcode', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('marital_status', models.CharField(max_length=50)),
                ('timezone', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='personal_images/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='LeadTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lead_status', models.CharField(choices=[('cold', 'Cold'), ('warm', 'Warm'), ('hot', 'Hot'), ('pending', 'Pending')], max_length=50)),
                ('prospect_rating', models.CharField(choices=[('not_rated', 'Not Rated'), ('1_star', '1 Star'), ('2_star', '2 Star'), ('3_star', '3 Star')], max_length=50)),
                ('preference_appointment_date', models.DateTimeField(blank=True, null=True)),
                ('lead_source', models.CharField(max_length=100)),
                ('candidate_comments', models.TextField()),
                ('signup_country', models.CharField(max_length=100)),
                ('signup_city', models.CharField(max_length=100)),
                ('signup_state_province', models.CharField(max_length=100)),
                ('signup_ip', models.GenericIPAddressField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lead_id', models.IntegerField()),
                ('campaign_id', models.IntegerField()),
                ('campaign_name', models.CharField(max_length=100)),
                ('form_id', models.IntegerField()),
                ('form_name', models.CharField(max_length=100)),
                ('ad_id', models.IntegerField()),
                ('ad_name', models.CharField(max_length=100)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.AddField(
            model_name='agent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student'),
        ),
        migrations.AddField(
            model_name='agent',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to='student.customuser'),
        ),
        migrations.CreateModel(
            name='AcademicAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highest_education', models.CharField(choices=[('highschool', 'High School'), ('language_pathway', 'Language Pathway'), ('undergraduate-foundation', 'Undergraduate Foundation'), ('undergraduate-certificate', 'Undergraduate Certificate'), ('undergraduate-diploma', 'Undergraduate Diploma'), ('undergraduate-associate_degree', 'Undergraduate Associate Degree'), ('undergraduate-bachelor', 'Undergraduate Bachelor'), ('postgraduate-certificate', 'Postgraduate Certificate'), ('postgraduate-diploma', 'Postgraduate Diploma'), ('masters', "Master's Degree"), ('doctrate_phd', 'Doctorate/PhD')], max_length=50)),
                ('country_where_study_completed', models.CharField(max_length=100)),
                ('start_date', models.DateField(default=datetime.date.today)),
                ('school_institute_name', models.CharField(default='', max_length=100)),
                ('completed_date', models.DateField(default=datetime.date.today)),
                ('title_of_your_course', models.CharField(default='', max_length=50)),
                ('result', models.FloatField(default=0.0)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
    ]
